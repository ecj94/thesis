"numeric", "numeric",  "numeric", "numeric",
#Reported.Comparison, Reported.P.Value, lb_b, ub_b
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
#dec_pval_rep, Computed, P_one_sided_chi, Error
"numeric", "numeric", "numeric", "numeric",
#DecisionError, OneTailed, Marg.sig, Hypothesis
"numeric", "text", "numeric", "text",
#Information from text article used, Comment
"text", "text"))
#Assigning numbers to the categories of 'Reported.Comparison'.
Hyp$Reported.Comparison[which(Hyp$Reported.Comparison != "=")] <- "0"
Hyp$Reported.Comparison[which(Hyp$Reported.Comparison == "=")] <- "1"
#Making '1E-3' and 'ns' numeric, such that 'Reported.P.Value' can be converted to a numeric variable properly.
Hyp$Reported.P.Value<- as.numeric(Hyp$Reported.P.Value)
#Hyp$Reported.P.Value[which(Hyp$Reported.P.Value=="1E-3")] <- .001
#Hyp$Reported.P.Value[which(Hyp$Reported.P.Value=="ns")] <- 1
#Subset exactly reported p-values in range [.0 - .10].
Hyp_all_jrnl_exact <- subset(Hyp, Reported.Comparison == 1)
pb_bump_Hyp <- subset(Hyp_all_jrnl_exact, Reported.P.Value >= 0 & Reported.P.Value <= .1) #n = 514
#Keeping only the variable 'Reported.P.Value' for plotting purposes.
pb_bump_Hyp <- pb_bump_Hyp[ ,c("Reported.P.Value")]
#Creating the histogram.
plot_man_rep <- ggplot() +
geom_histogram(data = Hyp_all_jrnl_exact, aes(x = Reported.P.Value), fill = 'grey', colour='black', #10 bins of width .01, black bin lines, bins colored grey, bins close on the left
bins=10, binwidth = .01, boundary = 0, closed = "right") + #ticks on the x-axis with intervals of .01
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis in the range [0, 200] with intervals of 25
scale_y_continuous(expand = c(0, 0), breaks = seq(0, 200, by = 10)) + #ticks on the y-axis in the range [0, 200] +
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
labs(title = "2D: ‘Hyp’ (*n* = 167)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines and no gridline
theme(plot.title = ggtext::element_markdown(size = 12)) + #adapt title size
theme(axis.title.x = ggtext::element_markdown()) #enabling markdown text in label x-axis
#Putting the plots created above in one figure.
txt1 <- c("**Exactly reported *p*-values in the range [0, .10]**") #title of the figure
plot3_aut <- grid.arrange(plot_aut_rep, plot_aut_rep_nh, plot_aut_rep_h, plot_man_rep, ncol=2, nrow=2, top = richtext_grob(txt1,gp=gpar(fontsize=12, font=1))) #creating one Figure with 4 plots, and adding a title
plot_3lab_aut <- as_ggplot(plot3_aut) #putting created figure into ggplot format
library('readxl') #reading in data files
library('ggplot2') #plotting
library('ggtext') #adapting title size
library('gridExtra') #arranging tables
library('gridtext') #adapting text above final table
library('grid') #font (size) options in grid.arrange function
library('ggpubr') #creating a ggplot object out of multiple ggplots out together
library("cowplot") #adding a label to the final plot
############################
##        Plots AllP      ##
############################
setwd("..") #setting working directory to 'thesis'
setwd("./Data") #setting working directory to 'Data'
#Reading in 'AllP'
AllP <- read_excel("./AllP/AllP.xlsx", col_types = c(
#Article_numb, Article, Author(s), Journal
"numeric", "text", "text", "text",
#Year, Statistic, Reported.Comparison, Reported.P.Value
"numeric", "text", "text", "numeric",
#Raw, Result.Table, Reported.Not.Relevant, Not.Reported
"text", "numeric", "numeric", "numeric",
#Model.fit, Result.Hypothesis, Marg.Sig, Phrase in which mentioned
"numeric", "numeric", "numeric", "text",
#explicitly stated hypothesis, Comments
"text", "text"))
#Assigning numeric values to the types of reported comparisons.
AllP$Reported.Comparison[which(AllP$Reported.Comparison == "=")] <- 4
#AllP$Reported.Comparison[which(AllP$Reported.Comparison == "<")] <- 1
#AllP$Reported.Comparison[which(AllP$Reported.Comparison == ">")] <- 5
#AllP$Reported.Comparison[which(AllP$Reported.Comparison == "ns")] <- 3
#Assigning labels to the categories of 'Result.Hypothesis'.
AllP$Result.Hypothesis[which(AllP$Result.Hypothesis == 0)] <- "Result not related to hypothesis"
AllP$Result.Hypothesis[which(AllP$Result.Hypothesis == 1)] <- "Result related to hypothesis"
#Selecting only exactly reported p-values.
AllP_exact <- subset(AllP, Reported.Comparison == 4)
#Plot total reported p-values in range [.0 - .10].
sum(AllP_exact$Reported.P.Value >= 0 & AllP_exact$Reported.P.Value <= .1) #n = 514
plot_aut_rep <- ggplot() +
geom_histogram(data = AllP_exact, aes(x = Reported.P.Value), fill = 'grey', colour='black', bins=10, binwidth = .01, boundary = 0, closed = "right") + #10 bins, width .01, black bin lines, bins colored grey, lines of bins are black, bins close on the right
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis with equal intervals of .01
scale_y_continuous(expand = c(0, 0), breaks = seq(0,200, by = 25)) + #ticks on the y-axis with intervals of 25
labs(title = "2A:  ‘APA’, total (*n* = 514)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines,  no gridline is chosen
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
theme(plot.title = ggtext::element_markdown(size = 12), axis.title.x = element_markdown()) #enabling markdown text in label x-axis, adapting title size
#Creating new data sets containing only reported results related to explicitly stated hypotheses and results not related to explicitly stated hypotheses, respectively.
AllP_exact_nh <- subset(AllP_exact, Result.Hypothesis == "Result not related to hypothesis") #data set containing only results of explicitly stated hypotheses
nrow(AllP_exact_nh) #n = 582
AllP_exact_h <- subset(AllP_exact, Result.Hypothesis == "Result related to hypothesis")  #data set containing only results not related to explicitly stated hypotheses
nrow(AllP_exact_h) #n = 232
#Plot reported *p*-values in range [.0 - .10] that are not related to explicitly stated hypotheses.
sum(AllP_exact_nh$Reported.P.Value >= 0 & AllP_exact_nh$Reported.P.Value <= .1) #n = 353
plot_aut_rep_nh <- ggplot() +
geom_histogram(data = AllP_exact_nh, aes(x = Reported.P.Value), fill = 'grey', colour='black', bins=10, binwidth = .01, boundary = 0, closed = "right") + #10 bins, width .01, black bin lines, bins colored grey, bins close on the left
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis with equal intervals of .01
scale_y_continuous(expand = c(0, 0), breaks = seq(0,200, by = 25)) + #ticks on the y-axis with equal intervals of 25
labs(title = "2B: ‘APA’, no hypothesis (*n* = 353)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines, no gridline
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
theme(plot.title = ggtext::element_markdown(size = 12), axis.title.x = element_markdown()) #enabling markdown text in label x-axis, adapting title size
#Plot reported *p*-values in range [.0 - .10] that are related to explicitly stated hypotheses.
sum(AllP_exact_h$Reported.P.Value >= 0 & AllP_exact_h$Reported.P.Value <= .1) #n = 161
plot_aut_rep_h <- ggplot() +
geom_histogram(data = AllP_exact_h, aes(x = Reported.P.Value), fill = 'grey', colour='black', bins=10, binwidth = .01, boundary = 0, closed = "right") + #10 bins, width .01, black bin lines, bins colored grey, bins close on the left
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) +
scale_y_continuous(expand = c(0, 0), breaks = seq(0,200, by = 25)) + #ticks on the y-axis with equal intervals of 25
labs(title = "2C: ‘APA’, result hypothesis (*n* = 161)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines, no gridline
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
theme(plot.title = ggtext::element_markdown(size = 12), axis.title.x = element_markdown()) #enabling markdown text in label x-axis, adapting title size
############################
##        Plot Hyp        ##
############################
setwd("..") #setting working directory to 'thesis'
setwd("./Data") #setting working directory to 'Data'
#Loading in 'Hyp'.
Hyp <- read_excel("./Hyp & inclusion_Hyp/Hyp.xlsx", col_types = c(
#Article_numb, Article, Author(s), Journal
"numeric", "text", "text", "text",
#Year, Issue, Number of hypotheses, Belongs to hypothesis
"numeric", "numeric", "numeric", "numeric",
#Statistic, b, se, s_stat
"text", "numeric", "numeric", "numeric",
#n, IVs, df_1,df_2
"numeric", "numeric",  "numeric", "numeric",
#Reported.Comparison, Reported.P.Value, lb_b, ub_b
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
#dec_pval_rep, Computed, P_one_sided_chi, Error
"numeric", "numeric", "numeric", "numeric",
#DecisionError, OneTailed, Marg.sig, Hypothesis
"numeric", "text", "numeric", "text",
#Information from text article used, Comment
"text", "text"))
#Assigning numbers to the categories of 'Reported.Comparison'.
Hyp$Reported.Comparison[which(Hyp$Reported.Comparison != "=")] <- "0"
Hyp$Reported.Comparison[which(Hyp$Reported.Comparison == "=")] <- "1"
#Making '1E-3' and 'ns' numeric, such that 'Reported.P.Value' can be converted to a numeric variable properly.
Hyp$Reported.P.Value<- as.numeric(Hyp$Reported.P.Value)
#Hyp$Reported.P.Value[which(Hyp$Reported.P.Value=="1E-3")] <- .001
#Hyp$Reported.P.Value[which(Hyp$Reported.P.Value=="ns")] <- 1
#Subset exactly reported p-values in range [.0 - .10].
Hyp_all_jrnl_exact <- subset(Hyp, Reported.Comparison == 1)
pb_bump_Hyp <- subset(Hyp_all_jrnl_exact, Reported.P.Value >= 0 & Reported.P.Value <= .1) #n = 514
#Keeping only the variable 'Reported.P.Value' for plotting purposes.
pb_bump_Hyp <- pb_bump_Hyp[ ,c("Reported.P.Value")]
#Creating the histogram.
plot_man_rep <- ggplot() +
geom_histogram(data = Hyp_all_jrnl_exact, aes(x = Reported.P.Value), fill = 'grey', colour='black', #10 bins of width .01, black bin lines, bins colored grey, bins close on the left
bins=10, binwidth = .01, boundary = 0, closed = "right") + #ticks on the x-axis with intervals of .01
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis in the range [0, 200] with intervals of 25
scale_y_continuous(expand = c(0, 0), breaks = seq(0, 200, by = 10)) + #ticks on the y-axis in the range [0, 200] +
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
labs(title = "2D: ‘Hyp’ (*n* = 167)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines and no gridline
theme(plot.title = ggtext::element_markdown(size = 12)) + #adapt title size
theme(axis.title.x = ggtext::element_markdown()) #enabling markdown text in label x-axis
#Putting the plots created above in one figure.
txt1 <- c("**Exactly reported *p*-values in the range [0, .10]**") #title of the figure
plot3_aut <- grid.arrange(plot_aut_rep, plot_aut_rep_nh, plot_aut_rep_h, plot_man_rep, ncol=2, nrow=2, top = richtext_grob(txt1,gp=gpar(fontsize=12, font=1))) #creating one Figure with 4 plots, and adding a title
plot_3lab_aut <- as_ggplot(plot3_aut) #putting created figure into ggplot format
library('readxl') #reading in data files
library('ggplot2') #plotting
library('ggtext') #adapting title size
library('gridExtra') #arranging tables
library('gridtext') #adapting text above final table
library('grid') #font (size) options in grid.arrange function
library('ggpubr') #creating a ggplot object out of multiple ggplots out together
library("cowplot") #adding a label to the final plot
############################
##        Plots AllP      ##
############################
setwd("..") #setting working directory to 'thesis'
setwd("./Data") #setting working directory to 'Data'
#Reading in 'AllP'
AllP <- read_excel("./AllP/AllP.xlsx", col_types = c(
#Article_numb, Article, Author(s), Journal
"numeric", "text", "text", "text",
#Year, Statistic, Reported.Comparison, Reported.P.Value
"numeric", "text", "text", "numeric",
#Raw, Result.Table, Reported.Not.Relevant, Not.Reported
"text", "numeric", "numeric", "numeric",
#Model.fit, Result.Hypothesis, Marg.Sig, Phrase in which mentioned
"numeric", "numeric", "numeric", "text",
#explicitly stated hypothesis, Comments
"text", "text"))
#Assigning numeric values to the types of reported comparisons.
#AllP$Reported.Comparison[which(AllP$Reported.Comparison == "=")] <- 4
#AllP$Reported.Comparison[which(AllP$Reported.Comparison == "<")] <- 1
#AllP$Reported.Comparison[which(AllP$Reported.Comparison == ">")] <- 5
#AllP$Reported.Comparison[which(AllP$Reported.Comparison == "ns")] <- 3
#Assigning labels to the categories of 'Result.Hypothesis'.
AllP$Result.Hypothesis[which(AllP$Result.Hypothesis == 0)] <- "Result not related to hypothesis"
AllP$Result.Hypothesis[which(AllP$Result.Hypothesis == 1)] <- "Result related to hypothesis"
#Selecting only exactly reported p-values.
AllP_exact <- subset(AllP, Reported.Comparison == "=")
#Plot total reported p-values in range [.0 - .10].
sum(AllP_exact$Reported.P.Value >= 0 & AllP_exact$Reported.P.Value <= .1) #n = 514
plot_aut_rep <- ggplot() +
geom_histogram(data = AllP_exact, aes(x = Reported.P.Value), fill = 'grey', colour='black', bins=10, binwidth = .01, boundary = 0, closed = "right") + #10 bins, width .01, black bin lines, bins colored grey, lines of bins are black, bins close on the right
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis with equal intervals of .01
scale_y_continuous(expand = c(0, 0), breaks = seq(0,200, by = 25)) + #ticks on the y-axis with intervals of 25
labs(title = "2A:  ‘APA’, total (*n* = 514)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines,  no gridline is chosen
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
theme(plot.title = ggtext::element_markdown(size = 12), axis.title.x = element_markdown()) #enabling markdown text in label x-axis, adapting title size
#Creating new data sets containing only reported results related to explicitly stated hypotheses and results not related to explicitly stated hypotheses, respectively.
AllP_exact_nh <- subset(AllP_exact, Result.Hypothesis == "Result not related to hypothesis") #data set containing only results of explicitly stated hypotheses
nrow(AllP_exact_nh) #n = 582
AllP_exact_h <- subset(AllP_exact, Result.Hypothesis == "Result related to hypothesis")  #data set containing only results not related to explicitly stated hypotheses
nrow(AllP_exact_h) #n = 232
#Plot reported *p*-values in range [.0 - .10] that are not related to explicitly stated hypotheses.
sum(AllP_exact_nh$Reported.P.Value >= 0 & AllP_exact_nh$Reported.P.Value <= .1) #n = 353
plot_aut_rep_nh <- ggplot() +
geom_histogram(data = AllP_exact_nh, aes(x = Reported.P.Value), fill = 'grey', colour='black', bins=10, binwidth = .01, boundary = 0, closed = "right") + #10 bins, width .01, black bin lines, bins colored grey, bins close on the left
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis with equal intervals of .01
scale_y_continuous(expand = c(0, 0), breaks = seq(0,200, by = 25)) + #ticks on the y-axis with equal intervals of 25
labs(title = "2B: ‘APA’, no hypothesis (*n* = 353)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines, no gridline
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
theme(plot.title = ggtext::element_markdown(size = 12), axis.title.x = element_markdown()) #enabling markdown text in label x-axis, adapting title size
#Plot reported *p*-values in range [.0 - .10] that are related to explicitly stated hypotheses.
sum(AllP_exact_h$Reported.P.Value >= 0 & AllP_exact_h$Reported.P.Value <= .1) #n = 161
plot_aut_rep_h <- ggplot() +
geom_histogram(data = AllP_exact_h, aes(x = Reported.P.Value), fill = 'grey', colour='black', bins=10, binwidth = .01, boundary = 0, closed = "right") + #10 bins, width .01, black bin lines, bins colored grey, bins close on the left
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) +
scale_y_continuous(expand = c(0, 0), breaks = seq(0,200, by = 25)) + #ticks on the y-axis with equal intervals of 25
labs(title = "2C: ‘APA’, result hypothesis (*n* = 161)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines, no gridline
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
theme(plot.title = ggtext::element_markdown(size = 12), axis.title.x = element_markdown()) #enabling markdown text in label x-axis, adapting title size
############################
##        Plot Hyp        ##
############################
setwd("..") #setting working directory to 'thesis'
setwd("./Data") #setting working directory to 'Data'
#Loading in 'Hyp'.
Hyp <- read_excel("./Hyp & inclusion_Hyp/Hyp.xlsx", col_types = c(
#Article_numb, Article, Author(s), Journal
"numeric", "text", "text", "text",
#Year, Issue, Number of hypotheses, Belongs to hypothesis
"numeric", "numeric", "numeric", "numeric",
#Statistic, b, se, s_stat
"text", "numeric", "numeric", "numeric",
#n, IVs, df_1,df_2
"numeric", "numeric",  "numeric", "numeric",
#Reported.Comparison, Reported.P.Value, lb_b, ub_b
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
#dec_pval_rep, Computed, P_one_sided_chi, Error
"numeric", "numeric", "numeric", "numeric",
#DecisionError, OneTailed, Marg.sig, Hypothesis
"numeric", "text", "numeric", "text",
#Information from text article used, Comment
"text", "text"))
#Assigning numbers to the categories of 'Reported.Comparison'.
Hyp$Reported.Comparison[which(Hyp$Reported.Comparison != "=")] <- "0"
Hyp$Reported.Comparison[which(Hyp$Reported.Comparison == "=")] <- "1"
#Making '1E-3' and 'ns' numeric, such that 'Reported.P.Value' can be converted to a numeric variable properly.
Hyp$Reported.P.Value<- as.numeric(Hyp$Reported.P.Value)
#Hyp$Reported.P.Value[which(Hyp$Reported.P.Value=="1E-3")] <- .001
#Hyp$Reported.P.Value[which(Hyp$Reported.P.Value=="ns")] <- 1
#Subset exactly reported p-values in range [.0 - .10].
Hyp_all_jrnl_exact <- subset(Hyp, Reported.Comparison == 1)
pb_bump_Hyp <- subset(Hyp_all_jrnl_exact, Reported.P.Value >= 0 & Reported.P.Value <= .1) #n = 514
#Keeping only the variable 'Reported.P.Value' for plotting purposes.
pb_bump_Hyp <- pb_bump_Hyp[ ,c("Reported.P.Value")]
#Creating the histogram.
plot_man_rep <- ggplot() +
geom_histogram(data = Hyp_all_jrnl_exact, aes(x = Reported.P.Value), fill = 'grey', colour='black', #10 bins of width .01, black bin lines, bins colored grey, bins close on the left
bins=10, binwidth = .01, boundary = 0, closed = "right") + #ticks on the x-axis with intervals of .01
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis in the range [0, 200] with intervals of 25
scale_y_continuous(expand = c(0, 0), breaks = seq(0, 200, by = 10)) + #ticks on the y-axis in the range [0, 200] +
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
labs(title = "2D: ‘Hyp’ (*n* = 167)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines and no gridline
theme(plot.title = ggtext::element_markdown(size = 12)) + #adapt title size
theme(axis.title.x = ggtext::element_markdown()) #enabling markdown text in label x-axis
#Putting the plots created above in one figure.
txt1 <- c("**Exactly reported *p*-values in the range [0, .10]**") #title of the figure
plot3_aut <- grid.arrange(plot_aut_rep, plot_aut_rep_nh, plot_aut_rep_h, plot_man_rep, ncol=2, nrow=2, top = richtext_grob(txt1,gp=gpar(fontsize=12, font=1))) #creating one Figure with 4 plots, and adding a title
plot_3lab_aut <- as_ggplot(plot3_aut) #putting created figure into ggplot format
library('readxl') #reading in data files
library('ggplot2') #plotting
library('ggtext') #adapting title size
library('gridExtra') #arranging tables
library('gridtext') #adapting text above final table
library('grid') #font (size) options in grid.arrange function
library('ggpubr') #creating a ggplot object out of multiple ggplots out together
library("cowplot") #adding a label to the final plot
############################
##        Plots AllP      ##
############################
setwd("..") #setting working directory to 'thesis'
setwd("./Data") #setting working directory to 'Data'
#Reading in 'AllP'
AllP <- read_excel("./AllP/AllP.xlsx", col_types = c(
#Article_numb, Article, Author(s), Journal
"numeric", "text", "text", "text",
#Year, Statistic, Reported.Comparison, Reported.P.Value
"numeric", "text", "text", "numeric",
#Raw, Result.Table, Reported.Not.Relevant, Not.Reported
"text", "numeric", "numeric", "numeric",
#Model.fit, Result.Hypothesis, Marg.Sig, Phrase in which mentioned
"numeric", "numeric", "numeric", "text",
#explicitly stated hypothesis, Comments
"text", "text"))
#Assigning labels to the categories of 'Result.Hypothesis'.
AllP$Result.Hypothesis[which(AllP$Result.Hypothesis == 0)] <- "Result not related to hypothesis"
AllP$Result.Hypothesis[which(AllP$Result.Hypothesis == 1)] <- "Result related to hypothesis"
#Selecting only exactly reported p-values.
AllP_exact <- subset(AllP, Reported.Comparison == "=")
#Plot total reported p-values in range [.0 - .10].
sum(AllP_exact$Reported.P.Value >= 0 & AllP_exact$Reported.P.Value <= .1) #n = 514
plot_aut_rep <- ggplot() +
geom_histogram(data = AllP_exact, aes(x = Reported.P.Value), fill = 'grey', colour='black', bins=10, binwidth = .01, boundary = 0, closed = "right") + #10 bins, width .01, black bin lines, bins colored grey, lines of bins are black, bins close on the right
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis with equal intervals of .01
scale_y_continuous(expand = c(0, 0), breaks = seq(0,200, by = 25)) + #ticks on the y-axis with intervals of 25
labs(title = "2A:  ‘APA’, total (*n* = 514)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines,  no gridline is chosen
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
theme(plot.title = ggtext::element_markdown(size = 12), axis.title.x = element_markdown()) #enabling markdown text in label x-axis, adapting title size
#Creating new data sets containing only reported results related to explicitly stated hypotheses and results not related to explicitly stated hypotheses, respectively.
AllP_exact_nh <- subset(AllP_exact, Result.Hypothesis == "Result not related to hypothesis") #data set containing only results of explicitly stated hypotheses
nrow(AllP_exact_nh) #n = 582
AllP_exact_h <- subset(AllP_exact, Result.Hypothesis == "Result related to hypothesis")  #data set containing only results not related to explicitly stated hypotheses
nrow(AllP_exact_h) #n = 232
#Plot reported *p*-values in range [.0 - .10] that are not related to explicitly stated hypotheses.
sum(AllP_exact_nh$Reported.P.Value >= 0 & AllP_exact_nh$Reported.P.Value <= .1) #n = 353
plot_aut_rep_nh <- ggplot() +
geom_histogram(data = AllP_exact_nh, aes(x = Reported.P.Value), fill = 'grey', colour='black', bins=10, binwidth = .01, boundary = 0, closed = "right") + #10 bins, width .01, black bin lines, bins colored grey, bins close on the left
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis with equal intervals of .01
scale_y_continuous(expand = c(0, 0), breaks = seq(0,200, by = 25)) + #ticks on the y-axis with equal intervals of 25
labs(title = "2B: ‘APA’, no hypothesis (*n* = 353)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines, no gridline
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
theme(plot.title = ggtext::element_markdown(size = 12), axis.title.x = element_markdown()) #enabling markdown text in label x-axis, adapting title size
#Plot reported *p*-values in range [.0 - .10] that are related to explicitly stated hypotheses.
sum(AllP_exact_h$Reported.P.Value >= 0 & AllP_exact_h$Reported.P.Value <= .1) #n = 161
plot_aut_rep_h <- ggplot() +
geom_histogram(data = AllP_exact_h, aes(x = Reported.P.Value), fill = 'grey', colour='black', bins=10, binwidth = .01, boundary = 0, closed = "right") + #10 bins, width .01, black bin lines, bins colored grey, bins close on the left
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) +
scale_y_continuous(expand = c(0, 0), breaks = seq(0,200, by = 25)) + #ticks on the y-axis with equal intervals of 25
labs(title = "2C: ‘APA’, result hypothesis (*n* = 161)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines, no gridline
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
theme(plot.title = ggtext::element_markdown(size = 12), axis.title.x = element_markdown()) #enabling markdown text in label x-axis, adapting title size
############################
##        Plot Hyp        ##
############################
setwd("..") #setting working directory to 'thesis'
setwd("./Data") #setting working directory to 'Data'
#Loading in 'Hyp'.
Hyp <- read_excel("./Hyp & inclusion_Hyp/Hyp.xlsx", col_types = c(
#Article_numb, Article, Author(s), Journal
"numeric", "text", "text", "text",
#Year, Issue, Number of hypotheses, Belongs to hypothesis
"numeric", "numeric", "numeric", "numeric",
#Statistic, b, se, s_stat
"text", "numeric", "numeric", "numeric",
#n, IVs, df_1,df_2
"numeric", "numeric",  "numeric", "numeric",
#Reported.Comparison, Reported.P.Value, lb_b, ub_b
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
#dec_pval_rep, Computed, P_one_sided_chi, Error
"numeric", "numeric", "numeric", "numeric",
#DecisionError, OneTailed, Marg.sig, Hypothesis
"numeric", "text", "numeric", "text",
#Information from text article used, Comment
"text", "text"))
#Assigning numbers to the categories of 'Reported.Comparison'.
Hyp$Reported.Comparison[which(Hyp$Reported.Comparison != "=")] <- "0"
Hyp$Reported.Comparison[which(Hyp$Reported.Comparison == "=")] <- "1"
#Making '1E-3' and 'ns' numeric, such that 'Reported.P.Value' can be converted to a numeric variable properly.
Hyp$Reported.P.Value<- as.numeric(Hyp$Reported.P.Value)
#Hyp$Reported.P.Value[which(Hyp$Reported.P.Value=="1E-3")] <- .001
#Hyp$Reported.P.Value[which(Hyp$Reported.P.Value=="ns")] <- 1
#Subset exactly reported p-values in range [.0 - .10].
Hyp_all_jrnl_exact <- subset(Hyp, Reported.Comparison == 1)
pb_bump_Hyp <- subset(Hyp_all_jrnl_exact, Reported.P.Value >= 0 & Reported.P.Value <= .1) #n = 514
#Keeping only the variable 'Reported.P.Value' for plotting purposes.
pb_bump_Hyp <- pb_bump_Hyp[ ,c("Reported.P.Value")]
#Creating the histogram.
plot_man_rep <- ggplot() +
geom_histogram(data = Hyp_all_jrnl_exact, aes(x = Reported.P.Value), fill = 'grey', colour='black', #10 bins of width .01, black bin lines, bins colored grey, bins close on the left
bins=10, binwidth = .01, boundary = 0, closed = "right") + #ticks on the x-axis with intervals of .01
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis in the range [0, 200] with intervals of 25
scale_y_continuous(expand = c(0, 0), breaks = seq(0, 200, by = 10)) + #ticks on the y-axis in the range [0, 200] +
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
labs(title = "2D: ‘Hyp’ (*n* = 167)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines and no gridline
theme(plot.title = ggtext::element_markdown(size = 12)) + #adapt title size
theme(axis.title.x = ggtext::element_markdown()) #enabling markdown text in label x-axis
#Putting the plots created above in one figure.
txt1 <- c("**Exactly reported *p*-values in the range [0, .10]**") #title of the figure
plot3_aut <- grid.arrange(plot_aut_rep, plot_aut_rep_nh, plot_aut_rep_h, plot_man_rep, ncol=2, nrow=2, top = richtext_grob(txt1,gp=gpar(fontsize=12, font=1))) #creating one Figure with 4 plots, and adding a title
plot_3lab_aut <- as_ggplot(plot3_aut) #putting created figure into ggplot format
library('readxl') #reading in data files
library('ggplot2') #plotting
library('ggtext') #adapting title size
library('gridExtra') #arranging tables
library('gridtext') #adapting text above final table
library('grid') #font (size) options in grid.arrange function
library('ggpubr') #creating a ggplot object out of multiple ggplots out together
library("cowplot") #adding a label to the final plot
############################
##        Plots AllP      ##
############################
setwd("..") #setting working directory to 'thesis'
setwd("./Data") #setting working directory to 'Data'
#Reading in 'AllP'
AllP <- read_excel("./AllP/AllP.xlsx", col_types = c(
#Article_numb, Article, Author(s), Journal
"numeric", "text", "text", "text",
#Year, Statistic, Reported.Comparison, Reported.P.Value
"numeric", "text", "text", "numeric",
#Raw, Result.Table, Reported.Not.Relevant, Not.Reported
"text", "numeric", "numeric", "numeric",
#Model.fit, Result.Hypothesis, Marg.Sig, Phrase in which mentioned
"numeric", "numeric", "numeric", "text",
#explicitly stated hypothesis, Comments
"text", "text"))
#Assigning labels to the categories of 'Result.Hypothesis'.
AllP$Result.Hypothesis[which(AllP$Result.Hypothesis == 0)] <- "Result not related to hypothesis"
AllP$Result.Hypothesis[which(AllP$Result.Hypothesis == 1)] <- "Result related to hypothesis"
#Selecting only exactly reported p-values.
AllP_exact <- subset(AllP, Reported.Comparison == "=")
#Plot total reported p-values in range [.0 - .10].
sum(AllP_exact$Reported.P.Value >= 0 & AllP_exact$Reported.P.Value <= .1) #n = 514
plot_aut_rep <- ggplot() +
geom_histogram(data = AllP_exact, aes(x = Reported.P.Value), fill = 'grey', colour='black', bins=10, binwidth = .01, boundary = 0, closed = "right") + #10 bins, width .01, black bin lines, bins colored grey, lines of bins are black, bins close on the right
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis with equal intervals of .01
scale_y_continuous(expand = c(0, 0), breaks = seq(0,200, by = 25)) + #ticks on the y-axis with intervals of 25
labs(title = "2A:  ‘APA’, total (*n* = 514)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines,  no gridline is chosen
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
theme(plot.title = ggtext::element_markdown(size = 12), axis.title.x = element_markdown()) #enabling markdown text in label x-axis, adapting title size
#Creating new data sets containing only reported results related to explicitly stated hypotheses and results not related to explicitly stated hypotheses, respectively.
AllP_exact_nh <- subset(AllP_exact, Result.Hypothesis == "Result not related to hypothesis") #data set containing only results of explicitly stated hypotheses
nrow(AllP_exact_nh) #n = 582
AllP_exact_h <- subset(AllP_exact, Result.Hypothesis == "Result related to hypothesis")  #data set containing only results not related to explicitly stated hypotheses
nrow(AllP_exact_h) #n = 232
#Plot reported *p*-values in range [.0 - .10] that are not related to explicitly stated hypotheses.
sum(AllP_exact_nh$Reported.P.Value >= 0 & AllP_exact_nh$Reported.P.Value <= .1) #n = 353
plot_aut_rep_nh <- ggplot() +
geom_histogram(data = AllP_exact_nh, aes(x = Reported.P.Value), fill = 'grey', colour='black', bins=10, binwidth = .01, boundary = 0, closed = "right") + #10 bins, width .01, black bin lines, bins colored grey, bins close on the left
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis with equal intervals of .01
scale_y_continuous(expand = c(0, 0), breaks = seq(0,200, by = 25)) + #ticks on the y-axis with equal intervals of 25
labs(title = "2B: ‘APA’, no hypothesis (*n* = 353)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines, no gridline
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
theme(plot.title = ggtext::element_markdown(size = 12), axis.title.x = element_markdown()) #enabling markdown text in label x-axis, adapting title size
#Plot reported *p*-values in range [.0 - .10] that are related to explicitly stated hypotheses.
sum(AllP_exact_h$Reported.P.Value >= 0 & AllP_exact_h$Reported.P.Value <= .1) #n = 161
plot_aut_rep_h <- ggplot() +
geom_histogram(data = AllP_exact_h, aes(x = Reported.P.Value), fill = 'grey', colour='black', bins=10, binwidth = .01, boundary = 0, closed = "right") + #10 bins, width .01, black bin lines, bins colored grey, bins close on the left
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) +
scale_y_continuous(expand = c(0, 0), breaks = seq(0,200, by = 25)) + #ticks on the y-axis with equal intervals of 25
labs(title = "2C: ‘APA’, result hypothesis (*n* = 161)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines, no gridline
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
theme(plot.title = ggtext::element_markdown(size = 12), axis.title.x = element_markdown()) #enabling markdown text in label x-axis, adapting title size
############################
##        Plot Hyp        ##
############################
setwd("..") #setting working directory to 'thesis'
setwd("./Data") #setting working directory to 'Data'
#Loading in 'Hyp'.
Hyp <- read_excel("./Hyp & inclusion_Hyp/Hyp.xlsx", col_types = c(
#Article_numb, Article, Author(s), Journal
"numeric", "text", "text", "text",
#Year, Issue, Number of hypotheses, Belongs to hypothesis
"numeric", "numeric", "numeric", "numeric",
#Statistic, b, se, s_stat
"text", "numeric", "numeric", "numeric",
#n, IVs, df_1,df_2
"numeric", "numeric",  "numeric", "numeric",
#Reported.Comparison, Reported.P.Value, lb_b, ub_b
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
#dec_pval_rep, Computed, P_one_sided_chi, Error
"numeric", "numeric", "numeric", "numeric",
#DecisionError, OneTailed, Marg.sig, Hypothesis
"numeric", "text", "numeric", "text",
#Information from text article used, Comment
"text", "text"))
#Assigning numbers to the categories of 'Reported.Comparison'.
#Hyp$Reported.Comparison[which(Hyp$Reported.Comparison != "=")] <- "0"
#Hyp$Reported.Comparison[which(Hyp$Reported.Comparison == "=")] <- "1"
#Making '1E-3' and 'ns' numeric, such that 'Reported.P.Value' can be converted to a numeric variable properly.
Hyp$Reported.P.Value<- as.numeric(Hyp$Reported.P.Value)
#Hyp$Reported.P.Value[which(Hyp$Reported.P.Value=="1E-3")] <- .001
#Hyp$Reported.P.Value[which(Hyp$Reported.P.Value=="ns")] <- 1
#Subset exactly reported p-values in range [.0 - .10].
Hyp_all_jrnl_exact <- subset(Hyp, Reported.Comparison == "=")
pb_bump_Hyp <- subset(Hyp_all_jrnl_exact, Reported.P.Value >= 0 & Reported.P.Value <= .1) #n = 514
#Keeping only the variable 'Reported.P.Value' for plotting purposes.
pb_bump_Hyp <- pb_bump_Hyp[ ,c("Reported.P.Value")]
#Creating the histogram.
plot_man_rep <- ggplot() +
geom_histogram(data = Hyp_all_jrnl_exact, aes(x = Reported.P.Value), fill = 'grey', colour='black', #10 bins of width .01, black bin lines, bins colored grey, bins close on the left
bins=10, binwidth = .01, boundary = 0, closed = "right") + #ticks on the x-axis with intervals of .01
scale_x_continuous(expand = c(0, 0), breaks = seq(0, .10, by = .01), lim = c(0,.105)) + #ticks on the x-axis in the range [0, 200] with intervals of 25
scale_y_continuous(expand = c(0, 0), breaks = seq(0, 200, by = 10)) + #ticks on the y-axis in the range [0, 200] +
geom_vline(xintercept = .05, linetype = "dotted") + #dotted vertical line at p = .05
labs(title = "2D: ‘Hyp’ (*n* = 167)", x = "*p*-value") +  #add title and label to the x-axis
theme_classic(base_size = 10) + #theme with x and y axis lines and no gridline
theme(plot.title = ggtext::element_markdown(size = 12)) + #adapt title size
theme(axis.title.x = ggtext::element_markdown()) #enabling markdown text in label x-axis
#Putting the plots created above in one figure.
txt1 <- c("**Exactly reported *p*-values in the range [0, .10]**") #title of the figure
plot3_aut <- grid.arrange(plot_aut_rep, plot_aut_rep_nh, plot_aut_rep_h, plot_man_rep, ncol=2, nrow=2, top = richtext_grob(txt1,gp=gpar(fontsize=12, font=1))) #creating one Figure with 4 plots, and adding a title
plot_3lab_aut <- as_ggplot(plot3_aut) #putting created figure into ggplot format
View(Hyp_all_jrnl_exact)
